digraph "CFG for 'prefixSum_kernel' function" {
	label="CFG for 'prefixSum_kernel' function";

	Node0x9da1040 [shape=record,label="{entry:\l  %call = tail call i64 @get_local_id(i32 0) #2\l  %conv = trunc i64 %call to i32\l  %mul = shl nsw i32 %conv, 1\l  %idxprom = sext i32 %mul to i64\l  %arrayidx = getelementptr inbounds i32, i32* %input, i64 %idxprom\l  %0 = load i32, i32* %arrayidx, align 4, !tbaa !7\l  %arrayidx3 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom\l  store i32 %0, i32* %arrayidx3, align 8, !tbaa !7\l  %add = or i32 %mul, 1\l  %idxprom5 = sext i32 %add to i64\l  %arrayidx6 = getelementptr inbounds i32, i32* %input, i64 %idxprom5\l  %1 = load i32, i32* %arrayidx6, align 4, !tbaa !7\l  %arrayidx10 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom5\l  store i32 %1, i32* %arrayidx10, align 4, !tbaa !7\l  %d.0124 = lshr i32 %length, 1\l  %cmp125 = icmp eq i32 %d.0124, 0\l  br i1 %cmp125, label %for.cond.cleanup, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x9da1040:s0 -> Node0x9d9d510;
	Node0x9da1040:s1 -> Node0x9d9d610;
	Node0x9d9d610 [shape=record,label="{for.body.lr.ph:                                   \l  %add18 = add nsw i32 %mul, 2\l  br label %for.body\l}"];
	Node0x9d9d610 -> Node0x9d9d7e0;
	Node0x9d9d510 [shape=record,label="{for.cond.cleanup:                                 \l  %offset.0.lcssa = phi i32 [ 1, %entry ], [ %mul26, %if.end ]\l  %cmp28 = icmp eq i32 %conv, 0\l  br i1 %cmp28, label %if.then30, label %if.end34\l|{<s0>T|<s1>F}}"];
	Node0x9d9d510:s0 -> Node0x9da28d0;
	Node0x9d9d510:s1 -> Node0x9da29b0;
	Node0x9d9d7e0 [shape=record,label="{for.body:                                         \l  %d.0128 = phi i32 [ %d.0124, %for.body.lr.ph ], [ %d.0, %if.end ]\l  %offset.0126 = phi i32 [ 1, %for.body.lr.ph ], [ %mul26, %if.end ]\l  tail call void @barrier(i32 1) #2\l  %cmp12 = icmp sgt i32 %d.0128, %conv\l  br i1 %cmp12, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x9d9d7e0:s0 -> Node0x9da2fc0;
	Node0x9d9d7e0:s1 -> Node0x9d9d920;
	Node0x9da2fc0 [shape=record,label="{if.then:                                          \l  %mul16 = mul nsw i32 %offset.0126, %add\l  %sub = add nsw i32 %mul16, -1\l  %mul19 = mul nsw i32 %offset.0126, %add18\l  %sub20 = add nsw i32 %mul19, -1\l  %idxprom21 = sext i32 %sub to i64\l  %arrayidx22 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom21\l  %2 = load i32, i32* %arrayidx22, align 4, !tbaa !7\l  %idxprom23 = sext i32 %sub20 to i64\l  %arrayidx24 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom23\l  %3 = load i32, i32* %arrayidx24, align 4, !tbaa !7\l  %add25 = add nsw i32 %3, %2\l  store i32 %add25, i32* %arrayidx24, align 4, !tbaa !7\l  br label %if.end\l}"];
	Node0x9da2fc0 -> Node0x9d9d920;
	Node0x9d9d920 [shape=record,label="{if.end:                                           \l  %mul26 = shl nsw i32 %offset.0126, 1\l  %d.0 = lshr i32 %d.0128, 1\l  %cmp = icmp eq i32 %d.0, 0\l  br i1 %cmp, label %for.cond.cleanup, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x9d9d920:s0 -> Node0x9d9d510;
	Node0x9d9d920:s1 -> Node0x9d9d7e0;
	Node0x9da28d0 [shape=record,label="{if.then30:                                        \l  %sub31 = add i32 %length, -1\l  %idxprom32 = zext i32 %sub31 to i64\l  %arrayidx33 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom32\l  store i32 0, i32* %arrayidx33, align 4, !tbaa !7\l  br label %if.end34\l}"];
	Node0x9da28d0 -> Node0x9da29b0;
	Node0x9da29b0 [shape=record,label="{if.end34:                                         \l  %cmp37121 = icmp ugt i32 %length, 1\l  br i1 %cmp37121, label %for.body40.lr.ph, label %for.cond.cleanup39\l|{<s0>T|<s1>F}}"];
	Node0x9da29b0:s0 -> Node0x9da3c80;
	Node0x9da29b0:s1 -> Node0x9da3d20;
	Node0x9da3c80 [shape=record,label="{for.body40.lr.ph:                                 \l  %add52 = add nsw i32 %mul, 2\l  br label %for.body40\l}"];
	Node0x9da3c80 -> Node0x9da3ef0;
	Node0x9da3d20 [shape=record,label="{for.cond.cleanup39:                               \l  tail call void @barrier(i32 1) #2\l  %4 = load i32, i32* %arrayidx3, align 8, !tbaa !7\l  %arrayidx73 = getelementptr inbounds i32, i32* %output, i64 %idxprom\l  store i32 %4, i32* %arrayidx73, align 4, !tbaa !7\l  %5 = load i32, i32* %arrayidx10, align 4, !tbaa !7\l  %arrayidx81 = getelementptr inbounds i32, i32* %output, i64 %idxprom5\l  store i32 %5, i32* %arrayidx81, align 4, !tbaa !7\l  ret void\l}"];
	Node0x9da3ef0 [shape=record,label="{for.body40:                                       \l  %offset.1123 = phi i32 [ %offset.0.lcssa, %for.body40.lr.ph ], [ %shr41,\l... %for.inc65 ]\l  %d35.0122 = phi i32 [ 1, %for.body40.lr.ph ], [ %mul66, %for.inc65 ]\l  %shr41 = ashr i32 %offset.1123, 1\l  tail call void @barrier(i32 1) #2\l  %cmp42 = icmp sgt i32 %d35.0122, %conv\l  br i1 %cmp42, label %if.then44, label %for.inc65\l|{<s0>T|<s1>F}}"];
	Node0x9da3ef0:s0 -> Node0x9da4b80;
	Node0x9da3ef0:s1 -> Node0x9da4690;
	Node0x9da4b80 [shape=record,label="{if.then44:                                        \l  %mul48 = mul nsw i32 %shr41, %add\l  %sub49 = add nsw i32 %mul48, -1\l  %mul53 = mul nsw i32 %shr41, %add52\l  %sub54 = add nsw i32 %mul53, -1\l  %idxprom55 = sext i32 %sub49 to i64\l  %arrayidx56 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom55\l  %6 = load i32, i32* %arrayidx56, align 4, !tbaa !7\l  %idxprom57 = sext i32 %sub54 to i64\l  %arrayidx58 = getelementptr inbounds [512 x i32], [512 x i32]*\l... @prefixSum_kernel.block, i64 0, i64 %idxprom57\l  %7 = load i32, i32* %arrayidx58, align 4, !tbaa !7\l  store i32 %7, i32* %arrayidx56, align 4, !tbaa !7\l  %8 = load i32, i32* %arrayidx58, align 4, !tbaa !7\l  %add63 = add nsw i32 %8, %6\l  store i32 %add63, i32* %arrayidx58, align 4, !tbaa !7\l  br label %for.inc65\l}"];
	Node0x9da4b80 -> Node0x9da4690;
	Node0x9da4690 [shape=record,label="{for.inc65:                                        \l  %mul66 = shl nsw i32 %d35.0122, 1\l  %cmp37 = icmp ult i32 %mul66, %length\l  br i1 %cmp37, label %for.body40, label %for.cond.cleanup39\l|{<s0>T|<s1>F}}"];
	Node0x9da4690:s0 -> Node0x9da3ef0;
	Node0x9da4690:s1 -> Node0x9da3d20;
}
